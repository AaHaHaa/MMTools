% This code acts as a checker for symbolically calculating the rate
% equations of Ho populations.

%% Define variables
syms N0 N1 N2 N3 N4; % populations
syms N_total; % total population = N0+N1+N2+N3+N4
syms A10 A20 A30 A40; % spontaneous emission terms
syms A11 A21 A31 A41;
syms A12 A22 A32 A42;
syms A13 A23 A33 A43;
syms A14 A24 A34 A44;
syms r1 r2 r3 r4; % multiphonon decay rates; here, "r" stands for "Gamma" symbolically which is more commonly used mathematically for decay
syms we10; % stimulated emission terms
syms wa01 wa02 wa03 wa04; % stimulated absorption terms
syms wa14;
syms k2101 k1012 k3101 k1013; % cross-interacting terms, such as cross relaxation and upconversion

N0 = N_total - N1-N2-N3-N4; % make N0 a dependent variable since N_total is given and fixed

%% Coupled equations, dNi/dt (i=0,1,...,4), for each population
dN0dt = A10*N1+A20*N2+A30*N3+A40*N4 ...
        + r1*N1 ...
        + we10*N1 ...
        - (wa01 + wa02 + wa03 + wa04)*N0 ...
        - k2101*N2*N0 + k1012*N1^2 - k3101*N3*N0 + k1013*N1^2;
dN1dt = A21*N2+A31*N3+A41*N4 ...
        + r2*N2 ...
        - (A10 + r1)*N1 ...
        - we10*N1 ...
        + wa01*N0 - wa14*N1 ...
        + 2*k2101*N2*N0 - 2*k1012*N1^2 + 2*k3101*N3*N0 - 2*k1013*N1^2;
dN2dt = A32*N3+A42*N4 ...
        + r3*N3 ...
        - (A20 + A21 + r2)*N2 ...
        + wa02*N0 ...
        - k2101*N2*N0 + k1012*N1^2;
dN3dt = A43*N4 ...
        + r4*N4 ...
        - (A30 + A31 + A32 + r3)*N3 ...
        + wa03*N0 ...
        - k3101*N3*N0 + k1013*N1^2;
dN4dt = - (A40 + A41 + A42 + A43 + r4)*N4 ...
        + wa04*N0 ...
        + wa14*N1;
  
%% Check
disp(simplify(dN0dt+dN1dt+dN2dt+dN3dt+dN4dt)); % This should be zero

% Vary the variables below for calculating the derivatives to find the
% Jacobian matrix
for i = 1:4
    for j = 1:4
        fprintf('dN%udt_N%u = %s\n',i,j,simplify(eval(sprintf('diff(dN%udt,N%u)',i,j)))); % vary it to diff(dN0,dN2), etc. for example
    end
end